log10(10)
log10(20)
log10(25)
log10(100)
log10(1000)
log(0)
log(-1)
log(-2)
log(2)
log(20)
log10(20)
log10(10)
log10(100)
library(fpp2)
install.packages(fpp2)
install.packages("fpp2")
library(fpp2)
knitr::opts_chunk$set(echo = TRUE)
fc = rwf(eggs, drift = TRUE, lambda = 0, h = 50)
fc2 = rwf(eggs, drift = TRUE, lambda = 0.3, h = 50, biasadj = TRUE)
autoplot(eggs) +
autolayer(fc, series = "Simple back transformation") +
autolayer(fc2, series = "Bias adjusted") +
guides(colour = guide_legend(title = "Forecast"))
fc = rwf(eggs, drift = TRUE, lambda = 0, h = 50, level = 80)
fc2 = rwf(eggs, drift = TRUE, lambda = 0.3, h = 50,level = 80, biasadj = TRUE)
autoplot(eggs) +
autolayer(fc, series = "Simple back transformation") +
autolayer(fc2, series = "Bias adjusted") +
guides(colour = guide_legend(title = "Forecast"))
fc = rwf(eggs, drift = TRUE, lambda = 0, h = 50, level = 80)
fc2 = rwf(eggs, drift = TRUE, lambda = 0.3, h = 50,level = 80, biasadj = TRUE)
autoplot(eggs) +
autolayer(fc, series = "Simple back transformation") +
autolayer(fc2, series = "Bias adjusted", PI = FALSE) +
guides(colour = guide_legend(title = "Forecast"))
?rwf
fc = rwf(eggs, drift = TRUE, lambda = 0, h = 50, level = 80)
fc2 = rwf(eggs, drift = TRUE, lambda = 0.3, h = 50,level = 80, biasadj = TRUE)
autoplot(eggs) +
autolayer(fc, series = "Simple back transformation") +
autolayer(fc2, series = "Bias adjusted", PI = FALSE) +
guides(colour = guide_legend(title = "Forecast"))
knitr::opts_chunk$set(echo = TRUE)
library(fpp2)
autoplot(goog200) +
xlab("Day") + ylab("closing prices(in $") +
ggtitle("Google Stock(daily ending 6 December 2013")
library(ggplot2)
library(fpp2)
autoplot(goog200) +
xlab("Day") + ylab("closing prices(in $") +
ggtitle("Google Stock(daily ending 6 December 2013")
autoplot(residuals(naive(goog200))) +
xlab("Day") + ylab("") +
ggtitle("Residual from the Naive Method")
gghistogram(residuals(naive(goog200))) + ggtitle("Histogram of the residuals")
ggAcf(residuals(naive(goog200))) + ggtitle("ACF of residuals")
Box.test(residuals(naive(goog200)), lag = 10, fitdf = 0)
Box.test(residuals(naive(goog200)), lag = 10, fitdf = 0, type = "Lj")
checkresiduals(naive(goog200))
beer2 = window(ausbeer, start = 1992, end = c(2007,4))
beerfit1 = meanf(beer2, h = 10)
beerfit2 = rwf(beer2, h = 10)
beerfit3 = snaive(beer2, h = 10)
autoplot(window(ausbeer, start = 1992)) +
autolayer(beerfit1, series = "Mean", PI = FALSE) +
autolayer(beerfit2, series = "Naive", PI = FALSE) +
autolayer(beerfit3, series = "Seasonal Naive", PI = FALSE) +
ggtitle("Quarterly beer production data") +
xlab("Years") + ylab("Megalitres") +
guides(colour = guide_legend(title = "Forecast"))
beer3 = window(ausbeer, start = 2008)
accuracy(beerfit1, beer3)
accuracy(beerfit2, beer3)
accuracy(beerfit3, beer3)
googfc1 = meanf(goog200, h = 40)
googfc2 = rwf(goog200, h = 40)
googfc3 = rwf(goog200, drift = TRUE, h = 40)
autoplot(subset(goog200, end = 240)) +
autolayer(googfc1, series = "Mean", PI = FALSE) +
autolayer(googfc2, series = "Naive", PI = FALSE) +
autolayer(googfc3, series = "Drift", PI = FALSE) +
ggtitle("Google Daily Stock Price Index") +
xlab("Day") + ylab("Closing Price(in $)") +
guides(colour = guide_legend(title = "Forecast"))
googfc1 = meanf(goog200, h = 40)
googfc2 = rwf(goog200, h = 40)
googfc3 = rwf(goog200, drift = TRUE, h = 40)
autoplot(subset(goog, end = 240)) +
autolayer(googfc1, series = "Mean", PI = FALSE) +
autolayer(googfc2, series = "Naive", PI = FALSE) +
autolayer(googfc3, series = "Drift", PI = FALSE) +
ggtitle("Google Daily Stock Price Index") +
xlab("Day") + ylab("Closing Price(in $)") +
guides(colour = guide_legend(title = "Forecast"))
googtest = window(goog, start = 201, end = 240)
accuracy(googfc1, googtest)
accuracy(googfc2, googtest)
accuracy(googfc3, googtest)
tsCV(goog200, rwf, drift = TRUE, h = 1)
e = tsCV(goog200, rwf, drift = TRUE, h = 1)
e = tsCV(goog200, rwf, drift = TRUE, h = 1)
sqrt(mean(e^2, na.rm = TRUE))
sqrt(mean(residual(rwf(goog200, drift = TRUE))^2), na.rm  = TRUE))
sqrt(mean(residual(rwf(goog200, drift = TRUE))^2, na.rm  = TRUE))
sqrt(mean(residuals(rwf(goog200, drift = TRUE))^2, na.rm  = TRUE))
e = tsCV(goog200, forecastfunction = naive, h = 8)
mse = colMeans(e^2, na.rm = TRUE)
data.frame(h = 1:8, MSE = mse) %>%
ggplot(aes(x = h, y = MSE)) + geom_point()
?usnetelec
BoxCox.lambda(usnetelec)
plot(usnetelec)
plot((usnetelec*0.5 - 1)^0.5)
plot((usnetelec*0.6 - 1)^0.6)
plot((usnetelec*0.5167714 - 1)^0.5167714)
plot((usnetelec^0.5167714 - 1)/0.5167714)
plot((usnetelec^0.5 - 1)/0.5)
plot((usnetelec^0.6 - 1)/0.6)
plot(usnetelec)
plot(usgdp)
BoxCox.lambda(usgdp)
plot((usgdp^0.3 - 1)/0.3)
plot((usgdp^0.4 - 1)/0.4)
plot(mcopper)
BoxCox.lambda(mcopper)
plot((mcopper^0.1 - 1)/0.1)
plot((mcopper^0.2 - 1)/0.2)
plot(cangas)
BoxCox.lambda(cangas)
plot((cangas^0.5 - 1)/0.5)
plot((cangas^0.6 - 1)/0.6)
plot(usnetelec)
plot(usgdp)
plot(mcopper)
plot(enplanements)
knitr::opts_chunk$set(echo = TRUE)
library(fpp2)
naive(goog200)
autoplot(naive(goog200))
naive(goog200, bootstrap = TRUE)
knitr::opts_chunk$set(echo = TRUE)
autoplot(dframe, facet = TRUE) +
xlab("Years") + ylab("Pounds") +
ggtitle("Milk Production per cow")
library(fpp2)
dframe = cbind(Monthly = milk,
DailyAverage = milk/monthdays(milk))
autoplot(dframe, facet = TRUE) +
xlab("Years") + ylab("Pounds") +
ggtitle("Milk Production per cow")
par(mfrow = c(3,2))
plot(log(elec), main = "Electricity Consumption US", ylab = "lambda = 0")
for (i in seq(0.1,0.5,0.1)){
plot((elec^i - 1)/i, main = "Electricity Consumption US", ylab = paste("lambda = ", i))
}
par(mfrow = c(3,2))
for (i in seq(0.6,1,0.1)){
plot((elec^i - 1)/i, main = "Electricity Consumption US", ylab = paste("lambda = ", i))
}
BoxCox.lambda(elec)
lambda = BoxCox.lambda(elec)
autoplot(BoxCox(elec, lambda))
fc = rwf(eggs, drift = TRUE, lambda = 0, h = 50, level = 80)
fc2 = rwf(eggs, drift = TRUE, lambda = 0.3, h = 50,level = 80, biasadj = TRUE)
autoplot(eggs) +
autolayer(fc, series = "Simple back transformation") +
autolayer(fc2, series = "Bias adjusted", PI = FALSE) +
guides(colour = guide_legend(title = "Forecast"))
unnetelec
?usnetelec
autoplot(usnetelec) +
ggtitle("US net electricity generation") +
xlab("Year") + ylab("billion kwh")
BoxCox.lambda(usnetelec)
BoxCox.lambda(usnetelec)
par(mfrow = c(3,2))
plot(log(elec), main = "Electricity Consumption US", ylab = "lambda = 0")
for (i in seq(0.1,0.5,0.1)){
plot((elec^i - 1)/i, main = "Electricity Consumption US", ylab = paste("lambda = ", i))
}
autoplot((usnetelec^0.5-1)/0.5) +
ggtitle("US net electricity generation") +
xlab("Year") + ylab("billion kwh")
autoplot((usnetelec^0.6-1)/0.6) +
ggtitle("US net electricity generation") +
xlab("Year") + ylab("billion kwh")
autoplot((usnetelec^0.5-1)/0.5) +
ggtitle("US net electricity generation (lambda = 0.5)") +
xlab("Year") + ylab("billion kwh")
autoplot((usnetelec^0.6-1)/0.6) +
ggtitle("US net electricity generation (lambda = 0.6)") +
xlab("Year") + ylab("billion kwh")
sd(usnetelec)
sd((usnetelec^0.5-1)/0.5)
sd((usnetelec^0.6-1)/0.6)
plot(diff(usnetelec))
plot(diff(usnetelec^0.5-1)/0.5)
plot(diff(usnetelec^0.6-1)/0.6)
tsdisplay(diff(usnetelec))
plot(usgdp)
BoxCox.lambda(usgdp)
plot((usgdp^0.3-1)/0.3)
?usgdp
autoplot(usgdp) +
ggtitle("Quarterly US GDP") +
xlab("Quarter")
autoplot(usgdp) +
ggtitle("Quarterly US GDP") +
xlab("Quarter")
BoxCox.lambda(usgdp)
autoplot((usgdp^0.3-1)/0.3) +
ggtitle("Quarterly US GDP (lambda = 0.3)") +
xlab("Quarter")
autoplot((usgdp^0.4-1)/0.4) +
ggtitle("Quarterly US GDP (lambda = 0.3)") +
xlab("Quarter")
autoplot((usgdp^0.3-1)/0.3) +
ggtitle("Quarterly US GDP (lambda = 0.3)") +
xlab("Quarter")
autoplot((usgdp^0.4-1)/0.4) +
ggtitle("Quarterly US GDP (lambda = 0.4)") +
xlab("Quarter")
?mcopper
autoplot(mcopper) +
ggtitle("Monthly copper prices") +
xlab("Month")
BoxCox.lambda(mcopper)
plot((mcopper^0.2-1)/0.2)
BoxCox.lambda(mcopper)
?mcopper
autoplot((mcopper^0.2-1)/0.2) +
ggtitle("Monthly copper prices (lambda = 0.2)") +
xlab("Month")
autoplot((mcopper^0.3-1)/0.3) +
ggtitle("Monthly copper prices (lambda = 0.3)") +
xlab("Month")
plot(mcopper)
autoplot(boxcox(mcopper,0.2))
autoplot(BoxCox(mcopper,0.2))
autoplot(BoxCox(mcopper,0.2)) +
ggtitle("Monthly copper prices (lambda = 0.2)") +
xlab("Month")
autoplot(BoxCox(mcopper,0.3)) +
ggtitle("Monthly copper prices (lambda = 0.3)") +
xlab("Month")
autoplot(BoxCox(mcopper,0.2)) +
ggtitle("Monthly copper prices (lambda = 0.2)") +
xlab("Month")
autoplot(BoxCox(mcopper,0.3)) +
ggtitle("Monthly copper prices (lambda = 0.3)") +
xlab("Month")
autoplot(BoxCox(usgdp,0.3)) +
ggtitle("Quarterly US GDP (lambda = 0.3)") +
xlab("Quarter")
autoplot(BoxCox(usgdp,0.4)) +
ggtitle("Quarterly US GDP (lambda = 0.4)") +
xlab("Quarter")
qqnorm(usnetelec)
qqline(usnetelec)
qqnorm((usnetelec^0.5-1)/0.5)
qqline((usnetelec^0.5-1)/0.5)
qqnorm((usgdp^0.3-1)/0.3)
qqline((usgdp^0.3-1)/0.3)
qqnorm(usgdp)
qqline(usgdp)
qqnorm(mcopper)
qqline(mcopper)
qqline((mcopper^0.2-1)/0.2)
qqnorm((mcopper^0.2-1)/0.2)
qqline((mcopper^0.2-1)/0.2)
?enplanements
autoplot(enplanements) +
ggtitle("Monthly US domestic enplanements") +
xlab("Month")
autoplot(enplanements) +
ggtitle("Monthly US domestic enplanements") +
xlab("Month")
BoxCox.lambda(enplanements)
plot((enplanements^(-0.2)-1)/(-0.2))
autoplot(BoxCox(enplanements,-0.2))
autoplot(BoxCox(enplanements,-0.2))
autoplot(BoxCox(enplanements,-0.2)) +
ggtitle("Monthly US domestic enplanements (lambda = -0.2") +
xlab("Month")
autoplot(BoxCox(enplanements,-0.2)) +
ggtitle("Monthly US domestic enplanements (lambda = -0.2)") +
xlab("Month")
?cangas
autoplot(cangas) +
ggtitle("Monthly Canadian Gas Production") +
xlab("Month")
BoxCox.lambda(cangas)
autoplot(BoxCox(cangas,0.6)) +
ggtitle("Monthly US domestic enplanements (lambda = -0.2)") +
xlab("Month")
